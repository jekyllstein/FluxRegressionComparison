//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-24817639
// Cuda compilation tools, release 10.0, V10.0.130
// Based on LLVM 3.4svn
//

.version 6.3
.target sm_30
.address_size 64

	// .globl	updateParams

.visible .entry updateParams(
	.param .u32 updateParams_param_0,
	.param .u32 updateParams_param_1,
	.param .f32 updateParams_param_2,
	.param .f32 updateParams_param_3,
	.param .f32 updateParams_param_4,
	.param .f32 updateParams_param_5,
	.param .u64 updateParams_param_6,
	.param .u64 updateParams_param_7,
	.param .u64 updateParams_param_8,
	.param .u64 updateParams_param_9
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<32>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<14>;


	ld.param.u32 	%r2, [updateParams_param_0];
	ld.param.u32 	%r3, [updateParams_param_1];
	ld.param.f32 	%f2, [updateParams_param_2];
	ld.param.f32 	%f3, [updateParams_param_3];
	ld.param.f32 	%f4, [updateParams_param_4];
	ld.param.f32 	%f8, [updateParams_param_5];
	ld.param.u64 	%rd1, [updateParams_param_6];
	ld.param.u64 	%rd2, [updateParams_param_7];
	ld.param.u64 	%rd3, [updateParams_param_8];
	ld.param.u64 	%rd4, [updateParams_param_9];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	lg2.approx.f32 	%f9, %f3;
	mul.f32 	%f10, %f9, %f8;
	ex2.approx.f32 	%f7, %f10;
	mov.f32 	%f6, 0f3F800000;
	// inline asm
	sub.rn.f32 %f5, %f6, %f7;
	// inline asm
	setp.lt.s32	%p1, %r7, %r2;
	setp.lt.s32	%p2, %r11, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB0_2;
	bra.uni 	BB0_1;

BB0_1:
	// inline asm
	sub.rn.f32 %f11, %f6, %f3;
	// inline asm
	cvta.to.global.u64 	%rd5, %rd3;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	cvta.to.global.u64 	%rd8, %rd2;
	add.s64 	%rd9, %rd8, %rd6;
	ld.global.f32 	%f14, [%rd9];
	mul.rn.f32 	%f15, %f11, %f14;
	ld.global.f32 	%f16, [%rd7];
	fma.rn.f32 	%f17, %f3, %f16, %f15;
	st.global.f32 	[%rd7], %f17;
	cvta.to.global.u64 	%rd10, %rd4;
	add.s64 	%rd11, %rd10, %rd6;
	ld.global.f32 	%f18, [%rd11];
	mul.rn.f32 	%f19, %f4, %f18;
	ld.global.f32 	%f20, [%rd9];
	abs.f32 	%f21, %f20;
	max.f32 	%f22, %f19, %f21;
	mov.f32 	%f23, 0f24E69595;
	max.f32 	%f24, %f22, %f23;
	st.global.f32 	[%rd11], %f24;
	ld.global.f32 	%f25, [%rd7];
	div.approx.f32 	%f26, %f25, %f24;
	cvta.to.global.u64 	%rd12, %rd1;
	add.s64 	%rd13, %rd12, %rd6;
	ld.global.f32 	%f27, [%rd13];
	neg.f32 	%f28, %f2;
	rcp.rn.f32 	%f29, %f5;
	mul.rn.f32 	%f30, %f28, %f29;
	fma.rn.f32 	%f31, %f30, %f26, %f27;
	st.global.f32 	[%rd13], %f31;

BB0_2:
	ret;
}

	// .globl	updateEst
.visible .entry updateEst(
	.param .u32 updateEst_param_0,
	.param .u32 updateEst_param_1,
	.param .f32 updateEst_param_2,
	.param .f32 updateEst_param_3,
	.param .u64 updateEst_param_4,
	.param .u64 updateEst_param_5,
	.param .u64 updateEst_param_6
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<11>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<11>;


	ld.param.u32 	%r2, [updateEst_param_0];
	ld.param.u32 	%r3, [updateEst_param_1];
	ld.param.f32 	%f1, [updateEst_param_2];
	ld.param.f32 	%f2, [updateEst_param_3];
	ld.param.u64 	%rd1, [updateEst_param_4];
	ld.param.u64 	%rd2, [updateEst_param_5];
	ld.param.u64 	%rd3, [updateEst_param_6];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.lt.s32	%p1, %r7, %r2;
	setp.lt.s32	%p2, %r11, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB1_2;
	bra.uni 	BB1_1;

BB1_1:
	mov.f32 	%f4, 0f3F800000;
	// inline asm
	sub.rn.f32 %f3, %f4, %f1;
	// inline asm
	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f6, [%rd8];
	mul.rn.f32 	%f7, %f1, %f6;
	ld.global.f32 	%f8, [%rd6];
	fma.rn.f32 	%f9, %f3, %f8, %f7;
	st.global.f32 	[%rd8], %f9;
	mul.rn.f32 	%f10, %f2, %f9;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f10;

BB1_2:
	ret;
}

	// .globl	elSq
.visible .entry elSq(
	.param .u32 elSq_param_0,
	.param .u32 elSq_param_1,
	.param .u64 elSq_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<5>;


	ld.param.u32 	%r2, [elSq_param_0];
	ld.param.u32 	%r3, [elSq_param_1];
	ld.param.u64 	%rd1, [elSq_param_2];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.lt.s32	%p1, %r7, %r2;
	setp.lt.s32	%p2, %r11, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB2_2;
	bra.uni 	BB2_1;

BB2_1:
	cvta.to.global.u64 	%rd2, %rd1;
	mul.wide.s32 	%rd3, %r1, 4;
	add.s64 	%rd4, %rd2, %rd3;
	ld.global.f32 	%f1, [%rd4];
	mul.rn.f32 	%f2, %f1, %f1;
	st.global.f32 	[%rd4], %f2;

BB2_2:
	ret;
}

	// .globl	elSq2
.visible .entry elSq2(
	.param .u32 elSq2_param_0,
	.param .u32 elSq2_param_1,
	.param .u64 elSq2_param_2,
	.param .u64 elSq2_param_3
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<8>;


	ld.param.u32 	%r2, [elSq2_param_0];
	ld.param.u32 	%r3, [elSq2_param_1];
	ld.param.u64 	%rd1, [elSq2_param_2];
	ld.param.u64 	%rd2, [elSq2_param_3];
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %ntid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r7, %r5, %r4, %r6;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r11, %r8, %r9, %r10;
	mad.lo.s32 	%r1, %r11, %r2, %r7;
	setp.lt.s32	%p1, %r7, %r2;
	setp.lt.s32	%p2, %r11, %r3;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB3_2;
	bra.uni 	BB3_1;

BB3_1:
	cvta.to.global.u64 	%rd3, %rd1;
	mul.wide.s32 	%rd4, %r1, 4;
	add.s64 	%rd5, %rd3, %rd4;
	ld.global.f32 	%f1, [%rd5];
	mul.rn.f32 	%f2, %f1, %f1;
	cvta.to.global.u64 	%rd6, %rd2;
	add.s64 	%rd7, %rd6, %rd4;
	st.global.f32 	[%rd7], %f2;

BB3_2:
	ret;
}

	// .globl	scaleParams
.visible .entry scaleParams(
	.param .u32 scaleParams_param_0,
	.param .u32 scaleParams_param_1,
	.param .f32 scaleParams_param_2,
	.param .u64 scaleParams_param_3,
	.param .u64 scaleParams_param_4
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<8>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<9>;


	ld.param.u32 	%r3, [scaleParams_param_0];
	ld.param.u32 	%r4, [scaleParams_param_1];
	ld.param.f32 	%f1, [scaleParams_param_2];
	ld.param.u64 	%rd1, [scaleParams_param_3];
	ld.param.u64 	%rd2, [scaleParams_param_4];
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r1, %r6, %r5, %r7;
	mov.u32 	%r8, %ntid.y;
	mov.u32 	%r9, %ctaid.y;
	mov.u32 	%r10, %tid.y;
	mad.lo.s32 	%r2, %r8, %r9, %r10;
	setp.lt.s32	%p1, %r1, %r3;
	setp.lt.s32	%p2, %r2, %r4;
	and.pred  	%p3, %p1, %p2;
	@!%p3 bra 	BB4_2;
	bra.uni 	BB4_1;

BB4_1:
	mad.lo.s32 	%r11, %r2, %r3, %r1;
	cvta.to.global.u64 	%rd3, %rd1;
	cvta.to.global.u64 	%rd4, %rd2;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f2, [%rd6];
	sqrt.rn.f32 	%f3, %f2;
	div.approx.f32 	%f4, %f1, %f3;
	cvt.sat.f32.f32	%f5, %f4;
	mul.wide.s32 	%rd7, %r11, 4;
	add.s64 	%rd8, %rd3, %rd7;
	ld.global.f32 	%f6, [%rd8];
	mul.rn.f32 	%f7, %f6, %f5;
	st.global.f32 	[%rd8], %f7;

BB4_2:
	ret;
}


